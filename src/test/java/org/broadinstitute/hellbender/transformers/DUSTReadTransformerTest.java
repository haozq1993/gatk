package org.broadinstitute.hellbender.transformers;

import htsjdk.samtools.SAMFileHeader;
import org.broadinstitute.hellbender.CommandLineProgramTest;
import org.broadinstitute.hellbender.utils.read.ArtificialReadUtils;
import org.broadinstitute.hellbender.utils.read.GATKRead;
import org.broadinstitute.hellbender.utils.test.BaseTest;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.util.Arrays;

import static org.testng.Assert.*;

public class DUSTReadTransformerTest extends BaseTest {

    private SAMFileHeader header;

    @BeforeMethod
    public void before() {
        header = ArtificialReadUtils.createArtificialSamHeader(1, 1, 1000);
    }

    @DataProvider(name = "sequenceStrings")
    public Object[][] getSequenceStrings() {
        return new Object[][] {
            {"CGTTTTTCAGTGATTTCTTCATTTTTCAATTCGTCAAGTGGATGTTTCTCATTTTCCATGATTTTCAGTTTTCTTGCCATATTCCACGTCCTACAGTGGAc",
            "CGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNAGTTTTCTTGCCATATTCCACGTCCTACAGTGGAc"},

            {"CCCAGGTGGTTTCAAACATTGCCTTGTATGTTGGCTTGGTCTGGATGATGTTTGTTCAGAACCAACGCTTAGCCTGGGTTACCGTAGCTTCTACCCCCGTa",
            "CCCAGGTGGTTTCAAACATTGCCTTGTATGTTGGCTTGGTCTGGATGATGTTTGTTCAGAACCAACGCTTAGCCTGGGTTACCGTAGCTTCTACCCCCGTa"},

            {"CTCAAGTACAAGCTGATCCAGACCTACAGGGTGATGTCATTAGAGGCACTGATAACACACACACTATGGGGTGGGGGTGGACAGTTCCCCACTGCAATCCg",
            "CTCAAGTACAAGCTGATCCAGACCTACAGGGTGATGTCATTAGAGGCACTGATAACACACACACTATGGGGTGGGGGTGGACAGTTCCCCACTGCAATCCg"},

            {"GTGTAGCCCCCGTGAATTGGTTCTTCCAAATGCCCCACAAAAACGCGGGATTATCGAATTGCCAGAGGCTACCCCTGTCGGCCAAGCCTTTGATCCAGCCA",
            "GTGTAGCCCCCGTGAATTGGTTCTTCCAAATGCCCCACAAAAACGCGGGATTATCGAATTGCCAGAGGCTACCCCTGTCGGCCAAGCCTTTGATCCAGCCA"},

            {"ACTTTTGGCTCTCTTTGTCTTTAAGTTTTTTTGTTTGTTTGTTCTTTGTCTAGGTATGGATCTTCTTGAGTTTGTCTCACAAATTTTATCTTACTGGCCAt",
            "ACTTTTGGCTCTCTTTGTCTTTAAGNNNNNNNGTTTGTTTGTTCTTTGTCTAGGTATGGATCTTCTTGAGTTTGTCTCACAAATTTTATCTTACTGGCCAt"},

            { "CCATATTCCAGGTCCTTCAGTGGGCATTTCTCATTTTTCACGTTTTTTAGTGATTTCGTCATTTTTCAAGTCGTCAAGTGGATGTTTCTCATTTTCCATGA",
            "CCATATTCCAGGTCCTTCAGTGGGCANNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCATGA"},

            {"ACATATTCCAGGTCCTTCAGTGGGCATTTCTCATTTTTCACGTTTTTTAGTGATTTCGTCATTTTTCAAGTCGTCAAGTGGATGTTTCTCATTTTCCATGA",
            "ACATATTCCAGGTCCTTCAGTGGGCANNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCATGA"},

            {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"},

            {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN",
            "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"},

            {"CGTTTTTCAGTGATTTCTTCATTTTTCAATTCGTCAAGTGGATGTTTCTCATTTTCCATGATTTTCAGTTTTCTTGCCATATTCCACGTCCTACAGTGGAC",
            "CGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNAGTTTTCTTGCCATATTCCACGTCCTACAGTGGAC"},

            {"GCTATCACTATATCCATCACGCCTGAAATGTACTAATGGGGGGGCAAACGAAACACTACATCAACTCCTTTTTTGATGCAAAAAAGTTCAGATTAACATAT",
            "GCTATCACTATATCCATCACGCCTGAAATGTACTAATNNNNNNNCAAACGAAACACTACATCAACTCCTTTTTTGATGCAAAAAAGTTCAGATTAACATAT"}
        };
    }

    @Test(dataProvider = "sequenceStrings")
    public void testApply(String seq_in, String seq_out) throws Exception {

        DUSTReadTransformer dustTrans = new DUSTReadTransformer();
        byte[] quals = seq_in.getBytes().clone();
        Arrays.fill(quals,(byte)'I');
        GATKRead read_in = ArtificialReadUtils.createArtificialRead(header, "foo", 0, 10, seq_in.getBytes(),quals);
        GATKRead read_out = dustTrans.apply(read_in);
        Assert.assertEquals(read_in.getBases(),seq_out.getBytes());
    }

}